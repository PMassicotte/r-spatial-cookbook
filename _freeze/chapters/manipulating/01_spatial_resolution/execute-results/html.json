{
  "hash": "f1a0a13e1afb4889757bff9590487846",
  "result": {
    "engine": "knitr",
    "markdown": "# Spatial resolution\n\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(terra)\nlibrary(tidyterra)\n```\n:::\n\n\n\n\n\n- Read the Baffin Bay polygon.\n- Read bathymetry data from the GEBCO 2022 dataset and crop it to the Baffin Bay extent using the `win` argument.\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbaffin <- vect(\"https://github.com/PMassicotte/baffin_bay_polygon/blob/main/data/clean/baffin_bay.gpkg?raw=true\")\n```\n:::\n\n::: {.cell crop='true'}\n\n```{.r .cell-code}\ncrop_extent <- ext(project(baffin, \"EPSG:4326\"))\n\nwm <- rnaturalearth::ne_countries(scale = \"medium\", returnclass = \"sv\")\n\nplot(wm, lwd = 0.25)\nplot(project(baffin, \"EPSG:4326\"), add = TRUE, col = \"red\")\n```\n\n::: {.cell-output-display}\n![](01_spatial_resolution_files/figure-html/plot_baffin-1.png)\n:::\n:::\n\n::: {.cell crop='true'}\n\n```{.r .cell-code}\nr <- rast(\n  \"/vsicurl/https://gebco2022.s3.valeria.science/gebco_2022_complete_cog.tif\",\n  win = crop_extent\n) |>\n  project(crs(baffin))\n\nplot(r)\n```\n\n::: {.cell-output-display}\n![](01_spatial_resolution_files/figure-html/load_bathy_raster-1.png)\n:::\n:::\n\n\n\n\n\n- Set a new resolution at 50 km\n- Resample the raster using the bilinear method\n- Plot the original and resampled rasters\n- Compare the original and resampled resolution\n\n\n\n\n\n::: {.cell crop='true'}\n\n```{.r .cell-code}\nr2 <- rast(ext(r))\nr2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass       : SpatRaster \ndimensions  : 10, 10, 1  (nrow, ncol, nlyr)\nresolution  : 163627.1, 186358.9  (x, y)\nextent      : 40471768, 42108039, 4602532, 6466121  (xmin, xmax, ymin, ymax)\ncoord. ref. :  \n```\n\n\n:::\n\n```{.r .cell-code}\nres(r2) <- 50000L\n\nr2 <- resample(r, r2, method = \"bilinear\")\n\nop <- par(mfrow = c(1L, 2L))\nplot(r)\nplot(r2)\n```\n\n::: {.cell-output-display}\n![](01_spatial_resolution_files/figure-html/unnamed-chunk-6-1.png)\n:::\n\n```{.r .cell-code}\npar(op)\n\nplot(as.polygons(r2))\nplot(as.points(r2), cex = 0.2, add = TRUE, col = \"red\")\n```\n\n::: {.cell-output-display}\n![](01_spatial_resolution_files/figure-html/unnamed-chunk-6-2.png)\n:::\n\n```{.r .cell-code}\nplot(r2)\nplot(as.lines(r2), add = TRUE)\n```\n\n::: {.cell-output-display}\n![](01_spatial_resolution_files/figure-html/unnamed-chunk-6-3.png)\n:::\n\n```{.r .cell-code}\nr\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass       : SpatRaster \ndimensions  : 8067, 7083, 1  (nrow, ncol, nlyr)\nresolution  : 231.0138, 231.0138  (x, y)\nextent      : 40471768, 42108039, 4602532, 6466121  (xmin, xmax, ymin, ymax)\ncoord. ref. : GR96 / EPSG Arctic zone 5-41 (EPSG:6059) \nsource(s)   : memory\nname        : gebco_2022_complete_cog \nmin value   :               -2426.086 \nmax value   :                2273.907 \n```\n\n\n:::\n\n```{.r .cell-code}\nr2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass       : SpatRaster \ndimensions  : 37, 33, 1  (nrow, ncol, nlyr)\nresolution  : 50000, 50000  (x, y)\nextent      : 40471768, 42121768, 4602532, 6452532  (xmin, xmax, ymin, ymax)\ncoord. ref. : GR96 / EPSG Arctic zone 5-41 (EPSG:6059) \nsource(s)   : memory\nname        : gebco_2022_complete_cog \nmin value   :               -2348.460 \nmax value   :                1251.003 \n```\n\n\n:::\n:::\n\n::: {.cell crop='true'}\n\n```{.r .cell-code}\nr3 <- mask(r2, baffin, touches = FALSE)\nplot(r3)\nplot(baffin, add = TRUE)\n```\n\n::: {.cell-output-display}\n![](01_spatial_resolution_files/figure-html/unnamed-chunk-7-1.png)\n:::\n:::\n",
    "supporting": [
      "01_spatial_resolution_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}