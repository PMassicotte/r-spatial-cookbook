# HE5 format

```{r}
#| label: crop_hook
#| echo: false
knitr::knit_hooks[["set"]](crop = knitr::hook_pdfcrop)
```

This section demonstrates how to access and visualize sea ice concentration data stored in HE5 files, focusing on data from the AMSR-E/AMSR2 Unified L3 Daily 12.5 km dataset. We'll use R along with the `gdalraster`, `stars`, `terra`, and `sf` packages.

::: {.callout-note}

## Disclaimer

The code below is largely based/copied on the work of [mdsumner](https://gist.github.com/mdsumner/08265bac3faf1e4325e2d5a39a5f66bf).

:::

```{r}
#| label: setup
library(gdalraster)
library(stars)
library(terra)
```

```{r}
file <- here::here("data", "AMSR_U2_L3_SeaIce12km_B04_20140314.he5")
```

The code leverages the NetCDF interface to access subdatasets within the HE5 file. This allows us to access the geolocation arrays, which is crucial for proper spatial referencing.

```{r}
sub <- paste0("NetCDF:", file, ":")
sds <- gdal_subdatasets(sub)

sf::gdal_utils("info", unlist(sds)[[30L]])
```

The data needs to be transformed to a standard coordinate reference system (CRS). EPSG:3411 (NSIDC Sea Ice Polar Stereographic North) is commonly used for Northern Hemisphere sea ice data. The `gdal_utils()` function warps the data to this CRS and saves it to a temporary VRT (Virtual Raster) file. VRT files are useful because they act as a pointer to the original data without duplicating it, and allow for on-the-fly transformations.

```{r}
dsn <- "/vsimem/temp.vrt"

sf::gdal_utils(
  "warp",
  unlist(sds)[[30L]],
  dsn,
  options = c("-t_srs", "EPSG:3411", "-overwrite")
)
```

The `rast()` function from the `terra` package is used to read the VRT file and create a `SpatRaster` object. This object contains the sea ice concentration data, which can be visualized using the `plot()` function.

```{r}
#| crop: true
r <- rast(dsn)
r

plot(r)
```

## Using `terra` directly

::: {.callout-warning}

Reading data from HE5 files using the `terra` package may not always work correctly, and you might encounter the error message "cannot find the spatial extent." If this happens, you can use the `gdalraster` package to read the data and then convert it to a `SpatRaster` object (as seen above).

To read data directly from an HE5 file with `terra`, ensure that `terra` is built with recent versions of the [GDAL](https://gdal.org/) and [PROJ](https://proj.org/) libraries. Note that compatibility with `GDAL` v3.9.x is unlikely.
:::

The installed version of `gdal` can be checked with the following command:

```{bash}
gdalinfo --version
```

If you have a recent version of `gdal`, you read the data directly from the HE5 file with the `terra` package.

```{r}
var_names <- describe(file, sds = TRUE)

head(var_names)

layer <- var_names[["var"]][grepl(
  "SI_12km_NH_ICECON_DAY",
  var_names[["var"]],
  fixed = TRUE
)]

layer

ice_layer <- rast(file, subds = layer)

ice_layer
```

Why are the dimensions different?

```{r}
dim(r)
dim(ice_layer)
```

```{r}
#| crop: true
plot(ice_layer)
```
